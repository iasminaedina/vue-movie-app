{"remainingRequest":"/Users/iasmina/Desktop/vue-movie-app/node_modules/thread-loader/dist/cjs.js!/Users/iasmina/Desktop/vue-movie-app/node_modules/babel-loader/lib/index.js!/Users/iasmina/Desktop/vue-movie-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iasmina/Desktop/vue-movie-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iasmina/Desktop/vue-movie-app/src/components/movieItem/movieItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iasmina/Desktop/vue-movie-app/src/components/movieItem/movieItem.vue","mtime":1562785196903},{"path":"/Users/iasmina/Desktop/vue-movie-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue-movie-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue-movie-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue-movie-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue-movie-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport storage from \"../../storage\";\nexport default {\n  props: ['id'],\n  data: function data() {\n    return {\n      movie: {},\n      movieBackdropSrc: '',\n      favoriteChecked: false\n    };\n  },\n  methods: {\n    //get movie\n    fetchMovie: function fetchMovie(id) {\n      axios.get(\"/movie/\".concat(id, \"?api_key=\").concat(storage.apiKey, \"&language=en-US\")).then(function (resp) {\n        this.movie = resp.data;\n        this.backdrop();\n        this.checkIfFavorite(); //open modal\n\n        if (storage.createMoviePopup) {\n          storage.moviePath = '/movie/' + id;\n          history.pushState({\n            popup: true\n          }, null, storage.moviePath);\n          storage.createMoviePopup = false;\n        } //change page title to movie title\n\n\n        document.title = this.movie.title;\n      }.bind(this)).catch(function (error) {\n        //show 404 page\n        this.$router.push({\n          name: '404'\n        });\n      }.bind(this));\n    },\n    //set image backdrop\n    backdrop: function backdrop() {\n      if (this.movie.backdrop_path) {\n        this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n      }\n    },\n    //check if movie is added to favorites\n    checkIfFavorite: function checkIfFavorite() {\n      var _this = this;\n\n      var favorites = JSON.parse(localStorage.getItem('favorites'));\n\n      if (favorites.find(function (fav) {\n        return fav == _this.movie.id;\n      })) {\n        this.favoriteChecked = true;\n      } else {\n        this.favoriteChecked = false;\n      }\n    },\n    //favorite/unfavorite methods\n    setFavorite: function setFavorite() {\n      var favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n      favorites.push(this.movie.id);\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.favoriteChecked = true;\n    },\n    unsetFavorite: function unsetFavorite() {\n      var favorites = JSON.parse(localStorage.getItem('favorites'));\n\n      for (var i = 0; i < favorites.length; i++) {\n        if (favorites[i] === this.movie.id) {\n          favorites.splice(i, 1);\n        }\n      }\n\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.favoriteChecked = false;\n    }\n  },\n  created: function created() {\n    this.fetchMovie(this.id);\n  }\n};",{"version":3,"sources":["movieItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"modal-container\">\n    <p class=\"image\">\n      <img :src=\"movieBackdropSrc\" alt=\"\">\n    </p>\n    <div class=\"tile is-parent\">\n      <article class=\"tile is-child\">\n        <div class=\"header\">\n          <p class=\"title movie-title\"> {{ movie.title }} </p>\n          <p class=\"title movie-rating\"> {{ movie.vote_average }} </p>\n        </div>\n        <p v-if=\"movie.tagline\" class=\"subtitle\">\n          <span class=\"uppercase\">{{ movie.tagline }}</span>\n        </p>\n\n        <div class=\"content\">\n\n          <div class=\"genre-subtitle uppercase\">\n            <span class=\"blue-color\">Genre: </span>\n            <span v-for=\"genre in movie.genres\"> {{ genre.name }} </span>\n          </div>\n\n          <p class=\"subtitle uppercase\">\n            <span class=\"blue-color\">Release date: </span>\n            <span>{{ movie.release_date | formatDate }}</span>\n          </p>\n\n          <div class=\"description\">\n            {{ movie.overview }}\n          </div>\n\n          <button\n            v-if=\"!favoriteChecked\"\n            class=\"button is-primary\"\n            v-on:click=\"setFavorite\"\n          >\n            Add to favorites\n          </button>\n          <button\n            v-if=\"favoriteChecked\"\n            class=\"button\"\n            v-on:click=\"unsetFavorite\"\n          >\n            Remove from favorites\n          </button>\n        </div>\n      </article>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import storage from '../../storage';\n\n  export default {\n    props: ['id'],\n    data(){\n      return {\n        movie: {},\n        movieBackdropSrc: '',\n        favoriteChecked: false,\n      }\n    },\n    methods: {\n      //get movie\n      fetchMovie(id) {\n        axios.get(`/movie/${id}?api_key=${storage.apiKey}&language=en-US`)\n        .then(function(resp) {\n          this.movie = resp.data;\n\n          this.backdrop();\n          this.checkIfFavorite();\n\n          //open modal\n          if (storage.createMoviePopup){\n            storage.moviePath = '/movie/' + id;\n            history.pushState({ popup: true }, null, storage.moviePath);\n            storage.createMoviePopup = false;\n          }\n\n          //change page title to movie title\n          document.title = this.movie.title;\n        }.bind(this))\n        .catch(function(error) {\n          //show 404 page\n          this.$router.push({ name: '404' });\n        }.bind(this));\n      },\n      //set image backdrop\n      backdrop(){\n        if (this.movie.backdrop_path) {\n          this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n        }\n      },\n      //check if movie is added to favorites\n      checkIfFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites'));\n\n        if (favorites.find(fav => fav == this.movie.id)) {\n          this.favoriteChecked = true;\n        } else  {\n          this.favoriteChecked = false;\n        }\n      },\n      //favorite/unfavorite methods\n      setFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        favorites.push(this.movie.id);\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.favoriteChecked = true;\n      },\n      unsetFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites'));\n        for ( var i = 0; i < favorites.length; i++){ \n          if ( favorites[i] === this.movie.id) {\n            favorites.splice(i, 1); \n          }\n        }\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.favoriteChecked = false;\n      }\n    },\n    created () {\n      this.fetchMovie(this.id);\n    }\n  }\n</script>\n\n<style scoped>\n  .tile {\n    padding: 20px;\n  }\n  .description {\n    margin-bottom: 20px;\n  }\n  .header {\n    display: flex;\n  }\n  .movie-title {\n    display: flex;\n    justify-content: flex-start;\n    width: 90%;\n  }\n  .movie-rating {\n    display: flex;\n    justify-content: flex-end;\n    color: #209cee;\n  }\n  .subtitle {\n    font-size: 12px;\n  }\n  .uppercase {\n    text-transform: uppercase;\n  }\n  .blue-color {\n    color: #209cee;\n  }\n  .genre-subtitle {\n    font-size: 12px;\n  }\n</style>\n"],"sourceRoot":"src/components/movieItem"}]}