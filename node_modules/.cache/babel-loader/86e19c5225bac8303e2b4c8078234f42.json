{"remainingRequest":"/Users/iasmina/Desktop/vue/node_modules/babel-loader/lib/index.js!/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iasmina/Desktop/vue/src/views/movieItem/movieItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iasmina/Desktop/vue/src/views/movieItem/movieItem.vue","mtime":1562770621899},{"path":"/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport storage from \"../../storage\";\nexport default {\n  props: ['id'],\n  data: function data() {\n    return {\n      movie: {},\n      movieLoaded: false,\n      moviePosterSrc: '',\n      movieBackdropSrc: '',\n      userLoggedIn: storage.sessionId ? true : false,\n      favoriteChecked: false,\n      favorites: []\n    };\n  },\n  methods: {\n    fetchMovie: function fetchMovie(id) {\n      axios.get(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=4cb1eeab94f45affe2536f2c684a5c9e&language=en-US\")).then(function (resp) {\n        this.movie = resp.data;\n        console.log(this.movie);\n        this.backdrop();\n        this.checkIfFavorite();\n\n        if (storage.createMoviePopup) {\n          storage.moviePath = '/movie/' + id;\n          history.pushState({\n            popup: true\n          }, null, storage.moviePath);\n          storage.createMoviePopup = false;\n        } // Change Page title\n\n\n        document.title = this.movie.title;\n      }.bind(this)).catch(function (error) {\n        this.$router.push({\n          name: '404'\n        });\n      }.bind(this));\n    },\n    backdrop: function backdrop() {\n      if (this.movie.backdrop_path) {\n        this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n      }\n    },\n    checkIfFavorite: function checkIfFavorite() {\n      var _this = this;\n\n      var favorites = JSON.parse(localStorage.getItem('favorites'));\n\n      if (favorites.find(function (fav) {\n        return fav == _this.movie.id;\n      })) {\n        this.favoriteChecked = true;\n      } else {\n        this.favoriteChecked = false;\n      }\n    },\n    setFavorite: function setFavorite() {\n      var favorites = JSON.parse(localStorage.getItem('favorites'));\n      favorites.push(this.movie.id);\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.favoriteChecked = true;\n    },\n    unsetFavorite: function unsetFavorite() {\n      var favorites = JSON.parse(localStorage.getItem('favorites'));\n\n      for (var i = 0; i < favorites.length; i++) {\n        if (favorites[i] === this.movie.id) {\n          favorites.splice(i, 1);\n        }\n      }\n\n      localStorage.setItem('favorites', JSON.stringify(favorites));\n      this.favoriteChecked = false;\n    }\n  },\n  computed: {},\n  created: function created() {\n    this.fetchMovie(this.id);\n  }\n};",{"version":3,"sources":["movieItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n      <p class=\"image\">\n        <img :src=\"movieBackdropSrc\" alt=\"\">\n      </p>\n        <div class=\"tile is-parent\">\n        <article class=\"tile is-child\">\n            <div class=\"header\">\n              <p class=\"title movie-title\"> {{movie.title}} </p>\n              <p class=\"title movie-rating\"> {{movie.vote_average}} </p>\n            </div>\n            <p v-if=\"movie.tagline\" class=\"subtitle\">\n              <span class=\"uppercase\">{{movie.tagline}}</span>\n            </p>\n            <div class=\"content\">\n                <div class=\"genre-subtitle uppercase\">\n                  <span class=\"blue-color\">Genre: </span>\n                  <span v-for=\"genre in movie.genres\"> {{genre.name}} </span>\n                </div>\n                <p class=\"subtitle uppercase\">\n                  <span class=\"blue-color\">Release date: </span>\n                  <span>{{ movie.release_date | formatDate }}</span>\n                </p>\n                <div class=\"content\">\n                  {{movie.overview}}\n                </div>\n                <button v-if=\"!favoriteChecked\" class=\"button is-primary\" v-on:click=\"setFavorite\">Favorite</button>\n                <button v-if=\"favoriteChecked\" class=\"button\" v-on:click=\"unsetFavorite\">Unfavorite</button>\n            </div>\n        </article>\n      </div>\n    </div>\n</template>\n<script>\n  import axios from 'axios';\n  import storage from '../../storage';\n\n  export default {\n    props: ['id'],\n    data(){\n      return {\n        movie: {},\n        movieLoaded: false,\n        moviePosterSrc: '',\n        movieBackdropSrc: '',\n        userLoggedIn: storage.sessionId ? true : false,\n        favoriteChecked: false,\n        favorites: []\n      }\n    },\n    methods: {\n        fetchMovie(id) {\n          axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4cb1eeab94f45affe2536f2c684a5c9e&language=en-US`)\n          .then(function(resp){\n            this.movie = resp.data;\n            console.log(this.movie);\n            this.backdrop();\n            this.checkIfFavorite();\n            if(storage.createMoviePopup){\n                storage.moviePath = '/movie/' + id;\n                history.pushState({ popup: true }, null, storage.moviePath);\n                storage.createMoviePopup = false;\n            }\n\n            // Change Page title\n            document.title = this.movie.title;\n        }.bind(this))\n        .catch(function(error) {\n          this.$router.push({ name: '404' });\n        }.bind(this));\n      },\n      backdrop(){\n        if (this.movie.backdrop_path){\n        this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n        }\n      },\n      checkIfFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites'));\n        if (favorites.find(fav => fav == this.movie.id)) {\n          this.favoriteChecked = true;\n        } else  {\n          this.favoriteChecked = false;\n        }\n      },\n      setFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites'));\n        favorites.push(this.movie.id);\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.favoriteChecked = true;\n      },\n      unsetFavorite() {\n        let favorites = JSON.parse(localStorage.getItem('favorites'));\n        for ( var i = 0; i < favorites.length; i++){ \n          if ( favorites[i] === this.movie.id) {\n            favorites.splice(i, 1); \n          }\n        }\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n        this.favoriteChecked = false;\n      }\n    },\n    computed: {\n    },\n    created () {\n      this.fetchMovie(this.id);\n    }\n  }\n</script>\n<style scoped>\n  .tile {\n    padding: 20px;\n  }\n\n  .header {\n    display: flex;\n  }\n  .movie-title {\n    display: flex;\n    justify-content: flex-start;\n    width: 90%;\n  }\n  .movie-rating {\n    display: flex;\n    justify-content: flex-end;\n    color: #209cee;\n  }\n  .subtitle {\n    font-size: 12px;\n  }\n  .uppercase {\n    text-transform: uppercase;\n  }\n  .blue-color {\n    color: #209cee;\n  }\n  .genre-subtitle {\n    font-size: 12px;\n  }\n</style>\n"],"sourceRoot":"src/views/movieItem"}]}