{"remainingRequest":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iasmina/Desktop/vue/src/components/movieItem/movieItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/iasmina/Desktop/vue/src/components/movieItem/movieItem.vue","mtime":1562522798302},{"path":"/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Router from 'vue-router';\nimport { async } from 'q';\n  export default {\n    props: ['id', 'type'],\n    data(){\n      return {\n        movie: {},\n        movieLoaded: false,\n        moviePosterSrc: '',\n        movieBackdropSrc: '',\n        userLoggedIn: storage.sessionId ? true : false,\n        favoriteChecked: false,\n        favorite: ''\n      }\n    },\n    methods: {\n        fetchMovie(id) {\n          this.$http.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4cb1eeab94f45affe2536f2c684a5c9e&language=en-US`)\n          .then(function(resp){\n            let movie = resp.data;\n            this.movie = movie;\n            this.backdrop();\n\n            // Change Page title\n            document.title = this.movie.title + storage.pageTitlePostfix;\n        }.bind(this))\n        .catch(function(error) {\n          this.$router.push({ name: '404' });\n        }.bind(this));\n      },\n        backdrop(){\n          if (this.movie.backdrop_path){\n            this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n        }\n    },\n    },\n    computed: {\n    },\n    created () {\n      this.fetchMovie(this.id);\n    }\n  }\n",{"version":3,"sources":["movieItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"movieItem.vue","sourceRoot":"src/components/movieItem","sourcesContent":["<template>\n    <div class=\"modal is-active\">\n    <div class=\"modal-background\"></div>\n    <div class=\"modal-content\">\n      <p class=\"image\">\n        <img :src=\"movieBackdropSrc\" alt=\"\">\n      </p>\n        <!-- <div class=\"tile is-parent\">\n        <article class=\"tile is-child notification is-danger\">\n            <p class=\"title\">Wide tile</p>\n            <p class=\"subtitle\">Aligned with the right tile</p>\n            <div class=\"content\">\n            </div>\n        </article>\n      </div> -->\n    </div>\n    <button class=\"modal-close is-large\" aria-label=\"close\"></button>\n    </div>\n</template>\n<script>\nimport Router from 'vue-router';\nimport { async } from 'q';\n  export default {\n    props: ['id', 'type'],\n    data(){\n      return {\n        movie: {},\n        movieLoaded: false,\n        moviePosterSrc: '',\n        movieBackdropSrc: '',\n        userLoggedIn: storage.sessionId ? true : false,\n        favoriteChecked: false,\n        favorite: ''\n      }\n    },\n    methods: {\n        fetchMovie(id) {\n          this.$http.get(`https://api.themoviedb.org/3/movie/${id}?api_key=4cb1eeab94f45affe2536f2c684a5c9e&language=en-US`)\n          .then(function(resp){\n            let movie = resp.data;\n            this.movie = movie;\n            this.backdrop();\n\n            // Change Page title\n            document.title = this.movie.title + storage.pageTitlePostfix;\n        }.bind(this))\n        .catch(function(error) {\n          this.$router.push({ name: '404' });\n        }.bind(this));\n      },\n        backdrop(){\n          if (this.movie.backdrop_path){\n            this.movieBackdropSrc = 'http://image.tmdb.org/t/p/w500' + this.movie.backdrop_path;\n        }\n    },\n    },\n    computed: {\n    },\n    created () {\n      this.fetchMovie(this.id);\n    }\n  }\n</script>\n<style scoped>\n    .modal-content {\n      height: 500px;\n      width: 900px;\n    }\n\n    img {\n      opacity: 0.2;\n    }\n</style>\n"]}]}