{"remainingRequest":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/iasmina/Desktop/vue/src/components/moviesList/moviesList.vue?vue&type=style&index=0&id=d5e0b922&scoped=true&lang=css&","dependencies":[{"path":"/Users/iasmina/Desktop/vue/src/components/moviesList/moviesList.vue","mtime":1562603656202},{"path":"/Users/iasmina/Desktop/vue/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/iasmina/Desktop/vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#movie-list {\n  padding: 20px;\n  min-height: 900px;\n}\n.title {\n  text-align: center;\n}\n.movie-title {\n  margin: 0;\n  font-size: 12px;\n  letter-spacing: 0.8px;\n  transition: color 0.5s ease;\n}\nimg {\n  transform: scale(0.97) translateZ(0);\n  transition: opacity 0.5s ease, transform 0.5s ease;\n}\nimg:hover {\n  transform: scale(1.03);\n  box-shadow: 0 0 10px rgba(#081c24, 0.1);\n  cursor: pointer;\n}\n.movie-title:hover {\n  cursor: pointer;\n  color: #081c24;\n}\n.not-found__content {\n  text-align: center;\n}\n",{"version":3,"sources":["moviesList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"moviesList.vue","sourceRoot":"src/components/moviesList","sourcesContent":["<template>\n  <div id=\"movie-list\">\n      <div class=\"container\">\n        <h1 class=\"title is-1\">{{listTitle}}</h1>\n          <div class=\"columns is-multiline\">\n            <a v-for=\"movie in movies\" class=\"column is-3\" :href=\"'/movie/' + movie.id\" @click.prevent=\"openMoviePopup(movie.id, true)\">\n              <img :src=\"'http://image.tmdb.org/t/p/w185' + movie.poster_path\">\n              <p class=\"movie-title\">{{ movie.title }}</p>\n            </a>\n          </div>\n          <section v-if=\"!movies.length\" class=\"not-found\">\n            <div class=\"not-found__content\">\n                <h2 class=\"not-found__title\" v-if=\"mode == 'search'\">Nothing Found</h2>\n                <h2 class=\"not-found__title\" v-if=\"mode == 'favorite'\">You haven't added any favorite movies</h2>\n            </div>\n          </section>\n      </div>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios';\n  import storage from '../../storage.js';\n\n  export default {\n    props: ['mode', 'category'],\n    beforeRouteLeave (to, from, next) {\n      if(from.name == 'search'){\n        eventHub.$emit('setSearchQuery', true);\n      }\n      next();\n    },\n    data(){\n      return {\n        movies: [],\n        listTitle: '',\n        pages: '',\n        results: '',\n        currentPage: 1,\n        listLoaded: false\n      }\n    },\n    computed: {\n      pageTitle(){\n        return this.listTitle + storage.pageTitlePostfix;\n      },\n      query(){\n        return this.$route.params.query || '';\n      },\n      request() {\n\n        if(this.mode == 'search') {\n          return `https://api.themoviedb.org/3/search/movie?api_key=${storage.apiKey}&language=en-US&query=${this.query}&page=1`;\n        } else if (this.mode == 'collection') {\n          let category = this.$route.params.category || this.category;\n          return `https://api.themoviedb.org/3/movie/${category}?api_key=${storage.apiKey}&language=en-US&page=1`;\n        } else if (this.mode == 'favorite') {\n            let ids = JSON.parse(localStorage.getItem('favorites'));\n            let favorites = [];\n\n            ids.forEach(function(id, key) {\n              axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${storage.apiKey}&language=en-US`)\n                .then(function(resp) {\n                  favorites.push(resp.data);\n                });\n            });\n            this.movies = favorites;\n        }\n\n      },\n      countResults(){\n        if(this.results > 1){\n          return numeral(this.results).format('0,0') + ' results';\n        } else {\n          return numeral(this.results).format('0,0') + ' result';\n        }\n      }\n    },\n    methods: {\n      openMoviePopup(id, event){\n        eventHub.$emit('openMoviePopup', id, event);\n      },\n      fetchCategory(){\n        axios.get(this.request)\n        .then(function(resp){\n            let data = resp.data;\n            this.movies = data.results;\n            this.pages = data.total_pages;\n            this.results = data.total_results;\n            this.listLoaded = true;\n            // Change Page title\n            document.title = this.pageTitle;\n        }.bind(this))\n        .catch(function(error) {\n          this.$router.push({ name: '404' });\n        }.bind(this));\n      },\n      loadMore(){\n        this.currentPage++;\n        axios.get(this.request)\n        .then(function(resp){\n            let data = resp.data;\n            let newData = this.movies.concat(data.results);\n            this.movies = newData;\n        }.bind(this));\n        },\n    },\n    watch: {\n      query(value){\n        this.fetchCategory(value);\n      },\n    },\n    created () {\n      if (this.mode == 'search'){\n        this.listTitle = storage.categories['search'];\n        eventHub.$emit('setSearchQuery');\n      } else if(this.mode == 'collection') {\n        let category = this.$route.params.category || this.category;\n        this.listTitle = storage.categories[category];\n      } else if(this.mode == 'favorite') {\n        this.listTitle = storage.categories['favorite'];\n      }\n      this.fetchCategory();\n    }\n  }\n</script>\n<style scoped>\n  #movie-list {\n    padding: 20px;\n    min-height: 900px;\n  }\n  .title {\n    text-align: center;\n  }\n  .movie-title {\n    margin: 0;\n    font-size: 12px;\n    letter-spacing: 0.8px;\n    transition: color 0.5s ease;\n  }\n  img {\n    transform: scale(0.97) translateZ(0);\n    transition: opacity 0.5s ease, transform 0.5s ease;\n  }\n  img:hover {\n    transform: scale(1.03);\n    box-shadow: 0 0 10px rgba(#081c24, 0.1);\n    cursor: pointer;\n  }\n  .movie-title:hover {\n    cursor: pointer;\n    color: #081c24;\n  }\n  .not-found__content {\n    text-align: center;\n  }\n</style>"]}]}